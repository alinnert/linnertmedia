<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on LinnertMedia</title><link>https://linnertmedia.de/blog/</link><description>Recent content in Blogs on LinnertMedia</description><generator>Hugo -- gohugo.io</generator><language>de-de</language><lastBuildDate>Sun, 17 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://linnertmedia.de/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Wie funktioniert this in JavaScript?</title><link>https://linnertmedia.de/blog/2019/this/</link><pubDate>Sun, 17 Feb 2019 00:00:00 +0000</pubDate><guid>https://linnertmedia.de/blog/2019/this/</guid><description>Das Keyword this in JavaScript ist eines der am meisten missverstandenen Sprachfeatures. Die Verwirrung rührt in der Regel daher, dass es in anderen Sprachen ebenfalls ein this-Keyword gibt, mit einer scheinbar ähnlichen Funktionsweise. Oft wird davon abgeraten, this überhaupt zu verwenden. Ich möchte in diesem Artikel die Angst vor dem Schlüsselwort nehmen und erklären, wie es genau funktioniert.
Andere klassenbasierte Sprachen ‒ z. B. Java ‒ verwenden this, um auf die aktuelle Instanz einer Klasse zu verweisen.</description></item><item><title>Willkommen auf dem neuen LinnertMedia-Blog</title><link>https://linnertmedia.de/blog/2018/willkommen/</link><pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate><guid>https://linnertmedia.de/blog/2018/willkommen/</guid><description>Hola zusammen und willkommen beim neuen Linnert Media Open Source-Blog!
Wie ihr seht, wurde mein Blog grundlegend überarbeitet. Das hat mehrere Gründe:
Ich verliere mit der Zeit immer mehr das Interesse an PHP und allen zusammenhängenden Technologien und Produkten. Ich bin gerade dabei eine kleine Anwendung in PHP zu entwickeln und stoße dabei immer wieder auf Probleme und Unschönheiten, die ich so von anderen Sprachen nicht kenne. Es existieren Einschränkungen, die das Arbeiten mit Web-Frameworks unnötig unschön machen.</description></item><item><title>Die Grundlagen zu Node.js</title><link>https://linnertmedia.de/blog/2018/node-grundlagen/</link><pubDate>Sat, 16 Jun 2018 00:00:00 +0000</pubDate><guid>https://linnertmedia.de/blog/2018/node-grundlagen/</guid><description>Node.js ist inzwischen allgegenwärtig in der Welt der Web-Entwicklung. Einige kennen es aber vielleicht nur im Kontext von JavaScript-Server-Anwendungen. Dieser Artikel soll einen groben Überblick über alle Facetten von Node.js geben.
Allgemeine Informationen Node.js ist eine Plattform, die es erlaubt, JavaScript-Code außerhalb eines Web-Browsers auszuführen. Die aktuellen Versionen verwenden V8 (Die JavaScript-Engine von Googles Browser Chrome) zum Ausführen von JavaScript-Code. Da V8 nur relativ begrenzte Möglichkeiten bietet, stehen einem des Weiteren noch native APIs zur Verfügung, um beispielsweise auf das lokale Dateisystem oder den Netzwerkverkehr zugreifen zu können.</description></item><item><title>AutoHotKey für angenehmeres Arbeiten mit der Tastatur</title><link>https://linnertmedia.de/blog/2017/autohotkey/</link><pubDate>Sat, 10 Jun 2017 00:00:00 +0000</pubDate><guid>https://linnertmedia.de/blog/2017/autohotkey/</guid><description>Viele Programmierer nutzen Vim als ihre primäre Entwicklungsumgebung unter anderem, weil so gut wie alle Befehle über das Buchstabenfeld der Tastatur erreichbar sind. Mit AutoHotkey lässt sich etwas Ähnliches bewerkstelligen und hat dabei meiner Meinung nach noch weitere Vorteile.
Im konsolenbasierten Text-Editor Vim lässt sich der Textcursor über die Tasten H/J/K/L steuern. Das ist ganz praktisch, da man beim Programmieren sehr oft zwischen dem Buchstabenfeld und den Pfeiltasten hin- und herwechseln muss.</description></item><item><title>Objekte in JavaScript</title><link>https://linnertmedia.de/blog/2015/javascript-objekte/</link><pubDate>Sun, 13 Sep 2015 00:00:00 +0000</pubDate><guid>https://linnertmedia.de/blog/2015/javascript-objekte/</guid><description>Objekte sind ein Hauptbestandteil von JavaScript. Diese erlauben es, Strukturen aufzubauen oder Daten und Funktionalitäten zusammenzufassen. Dieser Artikel erklärt, wie sie funktionieren und wie man mit ihnen umgeht.
Info: Vorwort Sehr bald nachdem ich den letzten Artikel veröffentlicht hatte, hat sich mein Bild über Objekte etwas verändert. Ich hab Artikel über JavaScript-Objekte und -Klassen gelesen, begonnen das Buch Programming JavaScript Applications (von Eric Elliot) zu lesen und Aufzeichnungen von Vorträgen zu diesem Thema anzusehen.</description></item><item><title>Variablen, undefined und simple Datentypen in JavaScript</title><link>https://linnertmedia.de/blog/2015/javascript-simple-datentypen/</link><pubDate>Mon, 29 Jun 2015 00:00:00 +0000</pubDate><guid>https://linnertmedia.de/blog/2015/javascript-simple-datentypen/</guid><description>Leute, die von anderen objektorientierten Programmiersprachen wie Java oder C# nach JavaScript wandern, fühlen sich unter Umständen irritiert. JavaScript ist einfach anders, bietet aber eine vertraute C-ähnliche Syntax. In der Tat hab ich bereits gelesen, dass JavaScript als &amp;ldquo;unlernbare Sprache&amp;rdquo; betitelt wurde. Diese Blog-Serie erklärt die Grundlagen und Funktionsweise von JavaScript, um ihr diesen schlechten Ruf wieder abzunehmen.
Info: Strict Mode Bevor wir wirklich beginnen, ein kleiner Hinweis: Es wird generell empfohlen, den strict mode von JavaScript zu aktivieren.</description></item></channel></rss>